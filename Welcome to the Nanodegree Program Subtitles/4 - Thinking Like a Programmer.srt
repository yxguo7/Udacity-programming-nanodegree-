In addition to the knowledge and skills you'll gain,  you're also going to practice thinking like a programmer.  And we're going to to focus on five ways of thinking that all programmers  must do.  And you already have experience in all of them.  The first is procedural thinking, and this involves taking a big problem and  breaking the solution into a set of steps: one, two, three.  The next way of thinking is called abstract thinking.  And if you couldn't do abstract thinking, you may know that  if someone gave you one apple and then another, you have two.  But if you someone asked you what happened when they gave one orange and  then another orange, you might have no idea.  But because you do have an understanding of the abstract idea of numbers,  you know that you have two oranges.  But even more importantly, you know th abstract idea, that one plus one is two.  The next programmatic way of thinking, is a systematic way of solving problems,  or systematic debugging.  Because even the best programmers make mistakes, and this is the skill where  they systematically identify problems, or potential problems, and  then track down potential causes, until they find the problem and fix it.  The fourth mental technique, is called technological empathy, and  it involves understanding how the computer sees things, and  you've already started developing this.  Now, when you see texts like this,  you can start to think about it the way a computer would.  You may already be thinking that the "is" should be bold.  The fifth technique that we're going to keep coming back to,  is called "systems thinking".  This may sound a little intimidating, but basically this involves taking one  big idea, like, what does it mean to think like a programmer.  And break it down into its component pieces.  Because we're going to keep coming back to these five ways of thinking,  next you'll see a text summary of all of them.  You can just skim it for now.  I'll link back to it as appropriate.  